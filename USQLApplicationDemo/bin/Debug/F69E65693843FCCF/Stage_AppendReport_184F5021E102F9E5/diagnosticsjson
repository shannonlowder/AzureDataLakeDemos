{"Error":[{"errorId":"E_CSC_USER_INVALIDCSHARP","severity":"Error","component":"CSC","source":"User","message":"C# error CS0103: The name 'CleansingFunctions' does not exist in the current context","description":"C# compiler reported that this expression is not valid C#.","resolution":"Make sure that a valid C# expression is specified.","details":"at token 'CleansingFunctions', line 62\r\nnear the ###:\r\n**************\r\nng,\r\n            [Est Household Income V5] string\r\n    FROM @InputFile\r\n    USING Extractors.Csv(silent:true, skipFirstNRows:1);\r\n\r\n@CleansedData =\r\n    SELECT  ### CleansingFunctions.GetSHA256Hash([in_first_name] + [in_last_name]) AS NameHash,\r\n           [in_seq],\r\n           [in_subseq],\r\n           [Address1],\r\n        ","internalDiagnostics":"ScopeCompiler.CompilationAbortedException: E_CSC_USER_INVALIDCSHARP: C# error CS0103: The name 'CleansingFunctions' does not exist in the current context\nDescription:\nC# compiler reported that this expression is not valid C#.\nResolution:\nMake sure that a valid C# expression is specified.\r\n ---> ScopeCompiler.CompilationAbortedException: E_CSC_USER_INVALIDCSHARP: C# error CS0103: The name 'CleansingFunctions' does not exist in the current context\nDescription:\nC# compiler reported that this expression is not valid C#.\nResolution:\nMake sure that a valid C# expression is specified.\r\n   at ScopeCompiler.FrontEnd.RoslynBinder.RaiseRoslynErrors(SyntaxNode tree, IEnumerable`1 diagnosticSource, DiagnosticCollection diagnosticTarget, ErrorLogger errors, List`1 selectItems, Script script)\r\n   at ScopeCompiler.FrontEnd.RoslynBinder.<>c__DisplayClass42_0.<BindExpressions>b__0(SyntaxTree syntaxTree, SemanticModel boundTree)\r\n   at ScopeCompiler.FrontEnd.RoslynBinder.Bind(SyntaxNode tree, Action`2 semanticAction)\r\n   at ScopeCompiler.FrontEnd.ExpressionBinder.Bind(DiagnosticCollection diagnostics, ExpressionBindingContext context, ErrorLogger errors, CompilerTimer timer)\r\n   at ScopeCompiler.FrontEnd.ExpressionBinderEngine.TryAgain(ExpressionBindingContext context, String previousExceptionMessage)\r\n   --- End of inner exception stack trace ---\r\n   at ScopeCompiler.FrontEnd.ExpressionBinderEngine.TryAgain(ExpressionBindingContext context, String previousExceptionMessage)\r\n   at ScopeCompiler.FrontEnd.ExpressionBinderEngine.BindSelectItems(Binding input, List`1 items, Script script, QueryExpression query)\r\n   at ScopeCompiler.FrontEnd.ScopeBinder.BindExpressions(Binding tableBinding, List`1 items)\r\n   at ScopeCompiler.FrontEnd.ScopeBinder.OnSelectQuery(Binding input, SelectQuery e)\r\n   at ScopeCompiler.VisitorContext`1.Transform[R](T node, Func`1 accept)\r\n   at ScopeCompiler.FrontEnd.ScopeBinder.OnQueryStatement(Binding input, QueryStatement e)\r\n   at ScopeCompiler.VisitorContext`1.Transform[R](T node, Func`1 accept)\r\n   at ScopeCompiler.FrontEnd.ScopeBinder.VisitStatementsAndAddBinding(Binding inputBinding, IEnumerable`1 statements, Binding scriptBinding)\r\n   at ScopeCompiler.FrontEnd.ScopeBinder.OnScript(Binding input, Script e)\r\n   at ScopeCompiler.VisitorContext`1.Transform[R](T node, Func`1 accept)\r\n   at ScopeCompiler.TreeTransform`3.Visit(P input, IEnumerable`1 nodes)\r\n   at ScopeCompiler.FrontEnd.ScopeBinder.OnBatch(Binding input, Batch e)\r\n   at ScopeCompiler.VisitorContext`1.Transform[R](T node, Func`1 accept)\r\n   at ScopeCompiler.FrontEnd.CompilePassHelper.Run(Action pass, Compiler compiler, CompilerTimer timer, Boolean throwOnErrors)\r\n   at ScopeCompiler.FrontEnd.FrontEndRunner.Execute()\r\n   at ScopeCompiler.FrontEnd.CompilePipeline.DoExecutePipeline()\r\n   at ScopeCompiler.FrontEnd.CompilePipeline.DoCompile()","helpLink":"","filePath":null,"lineNumber":62,"startOffset":9929,"endOffset":9947}]}